{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/Orden.js","components/Menu.js","firestore.js","pages/BadgeNew.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Navbar","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Orden","_ref","addUser","orden","user","handleInputChange","updateItem","deleteOrden","onSubmit","htmlFor","name","value","customer","onChange","data-testid","length","map","item","index","key","onClick","newItem","Object","objectSpread","count","concat","reduce","preciototal","elemento","Menu","addOrden","_useState","useState","_useState2","slicedToArray","filter","setFilter","compare","src","img","alt","role","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BadgeNew","setState","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","data","stop","apply","this","arguments","fetchData","_useState3","_useState4","setOrden","_useState5","_useState6","setUser","Navbar_Navbar","Menu_Menu","toConsumableArray","components_Orden","newItems","e","preventDefault","firestore","collection","add","date","FieldValue","serverTimestamp","event","target","container","document","getElementById","ReactDOM","render","pages_BadgeNew","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46345bb4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport './styles/Navbar.css';\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark Navbar justify-content-between title\">\n      <h1 className=\"principal\">BURGER QUEEN</h1>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse navbar-text margin-left\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item margin-li\">\n            <a className=\"nav-link\" href=\"#about\">ORDENAR PEDIDO</a>\n          </li>\n          <li className=\"nav-item margin-li\">\n            <a className=\"nav-link\" href=\"#about\">ATENDER PEDIDO</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#about\">PEDIDO LISTO</a>\n          </li>\n        </ul>\n      </div>\n      {/* <span class=\"navbar-text\">\n      Navbar text with an inline element\n    </span> */}\n    </nav>\n  );\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Orden.css';\n\nfunction Orden({\n  addUser, orden, user, handleInputChange, updateItem, deleteOrden,\n}) {\n  return (\n    <div>\n      <form onSubmit={addUser} className=\"margintop\">\n        <div className=\"center weigth row margin-orden\">\n          ORDEN\n        </div>\n        <div className=\"section form-inline margin-option container\">\n          <div className=\"row label\">\n            <label htmlFor=\"name\" className=\"label center\">\n              Nombre de cliente:\n              <input type=\"text\" id=\"name\" name=\"name\" value={user.customer} onChange={handleInputChange} data-testid=\"cliente-input\" />\n            </label>\n          </div>\n        </div>\n        <div className=\"container section center\">\n          <div className=\"row weigth font-mayor\">\n            <div className=\"col-3\">ITEM</div>\n            <div className=\"col-3\">CANTIDAD</div>\n            <div className=\"col-3\">P/UNITARIO</div>\n            <div className=\"col-3\">P/TOTAL</div>\n          </div>\n          {orden.length > 0 ? (\n            orden.map((item, index) => (\n              <div className=\"row margin-option center font-menor\" data-testid=\"item\" key={item.id}>\n                <div className=\"col-3 center\">{item.name}</div>\n                <div className=\"col-3 center\">\n                  <button\n                    type=\"button\"\n                    className=\"button-count margin-button-count-sum\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count += 1;\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-sum`}\n                  >\n                    <i className=\"fas fa-plus\"></i>\n                  </button>\n                  {item.count}\n                  <button\n                    type=\"button\"\n                    className=\"button-count margin-button-count-substr\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count -= 1;\n                      if (newItem.count < 1) {\n                        newItem.count = 1;\n                      }\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-subs`}\n                  >\n                    <i className=\"fas fa-minus\"></i>\n                  </button>\n                </div>\n                <div className=\"col-3 center\">{item.value}</div>\n                <div className=\"col-3 center\">\n                  {item.count * item.value}\n                  <button type=\"button\" className=\"button muted-button button-delete margin-button-count-substr\" onClick={() => deleteOrden(item.name)} data-testid={`${index}-deleteOrden-button`}><i className=\"fas fa-trash-alt\" /></button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"row center margin-option\">\n              <div className=\"col-12 center\">\n                No hay pedidos\n              </div>\n            </div>\n          )}\n          <div className=\"row weigth margin-total font-mayor\">\n            <p>\n              TOTAL:\n              {orden.reduce((preciototal, elemento) => preciototal\n                + (elemento.count * elemento.value),\n              0)}\n            </p>\n          </div>\n          <div className=\"margin-button-send weigth\">\n            <button type=\"submit\" data-testid=\"ordenToFirebase-button\" className=\"button-send\">ENVIAR A COCINAR</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nOrden.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  orden: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  updateItem: PropTypes.func.isRequired,\n  deleteOrden: PropTypes.func.isRequired,\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Orden;\n","/* eslint-disable react/self-closing-comp */\nimport React, { useState } from 'react';\nimport './styles/Menu.css';\nimport PropTypes from 'prop-types';\n\nexport default function Menu({ addOrden, state }) {\n  const [filter, setFilter] = useState('Desayuno');\n  return (\n    <div className=\"background-menu\">\n      <div className=\"row button-center margin-filter-bottom\">\n        <div className=\"col-6\">\n          <button className=\"button-filter weigth marginsup list-group-item list-group-item-action\" type=\"button\" onClick={() => setFilter('Desayuno')} data-testid=\"filter-button-desayuno\">DESAYUNO</button>\n        </div>\n        <div className=\"col-6\">\n          <button className=\"button-filter weigth marginsup list-group-item list-group-item-action\" type=\"button\" onClick={() => setFilter('Resto del día')} data-testid=\"filter-button-restodeldia\">MENÚ</button>\n        </div>\n      </div>\n      <div className=\"background-blue div-center\">\n        {state.filter(compare => (compare.type === filter)).map(item => (\n          <div key={item.id} className=\"row button-center background-white margin-div div-centerhijo padding-option\">\n            <div className=\"col-3\">\n              <img src={item.img} alt=\"imagen de opciones\"></img>\n            </div>\n            <div className=\"col-3 width section centrar font-menor\">\n              <p>{item.name}</p>\n            </div>\n            <div className=\"col-3 width section centrar font-menor\">\n              <p>\n                $/\n                {item.value}\n                .00\n              </p>\n            </div>\n            <div className=\"col-3 width section centrar\">\n              <span key={item.id} className=\"addOrden\" role=\"presentation\" onClick={() => addOrden(item.name)} data-testid=\"addOrden-button\"><i className=\"fas fa-shopping-cart\"></i></span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nMenu.propTypes = {\n  addOrden: PropTypes.func.isRequired,\n  state: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDcljSmfPj-K2KFAIkSJovXh5vomh91q60',\n  authDomain: 'burger-queen-a4832.firebaseapp.com',\n  databaseURL: 'https://burger-queen-a4832.firebaseio.com',\n  projectId: 'burger-queen-a4832',\n  storageBucket: 'burger-queen-a4832.appspot.com',\n  messagingSenderId: '358515366780',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport Orden from '../components/Orden';\nimport Menu from '../components/Menu';\nimport firebase from '../firestore';\nimport './styles/BadgeNew.css';\n\nconst BadgeNew = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios('https://raw.githubusercontent.com/mahaliroblesarbieto/LIM008-fe-burger-queen/prototype/src/data/menu.json');\n      setState(result.data);\n    }\n    fetchData();\n  }, []);\n\n  const [orden, setOrden] = useState([]);\n  const addOrden = (name) => {\n    state.filter(item => (item.name === name ? setOrden([...orden, item]) : item));\n  };\n  const deleteOrden = (name) => {\n    setOrden(orden.filter(item => item.name !== name));\n  };\n  const updateItem = (index, item) => {\n    const newItems = [...orden];\n    newItems[index] = item;\n    setOrden(newItems);\n  };\n  const [user, setUser] = useState({ customer: '' });\n  const handleInputChange = (event) => {\n    setUser({ customer: event.target.value });\n  };\n  const addUser = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.collection('users').add({ name: user.customer, orden, date: firebase.firestore.FieldValue.serverTimestamp() });\n    setUser({ customer: '' });\n    setOrden([]);\n  };\n  return (\n    <div className=\"width-total\">\n      <div className=\"row width-total\">\n        <Navbar />\n      </div>\n      <div className=\"row width-total\">\n        <div className=\"col-md-6 background-principal\">\n          <Menu addOrden={addOrden} state={state} />\n        </div>\n        <div className=\"col-md-6 background-principal margin-black\">\n          <Orden\n            orden={orden}\n            deleteOrden={deleteOrden}\n            updateItem={updateItem}\n            addUser={addUser}\n            user={user}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BadgeNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport BadgeNew from './pages/BadgeNew';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst container = document.getElementById('root');\nReactDOM.render(<BadgeNew className=\"width-total\" />, container);\n\nserviceWorker.register();\n"],"sourceRoot":""}