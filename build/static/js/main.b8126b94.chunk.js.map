{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/Orden.js","components/Menu.js","firestore.js","pages/BadgeNew.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Navbar","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Orden","_ref","addUser","orden","user","handleInputChange","updateItem","deleteOrden","onSubmit","name","value","customer","onChange","data-testid","length","map","item","index","key","onClick","newItem","Object","objectSpread","count","concat","colSpan","reduce","preciototal","elemento","Menu","addOrden","_useState","useState","_useState2","slicedToArray","filter","setFilter","compare","src","img","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BadgeNew","setState","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","data","stop","apply","this","arguments","fetchData","_useState3","_useState4","setOrden","_useState5","_useState6","setUser","Navbar_Navbar","Menu_Menu","toConsumableArray","components_Orden","newItems","e","preventDefault","firestore","collection","add","date","FieldValue","serverTimestamp","event","target","container","document","getElementById","ReactDOM","render","pages_BadgeNew","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b8126b94.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport './styles/Navbar.css';\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark Navbar justify-content-between title\">\n      <h1 className=\"principal\">BURGER QUEEN</h1>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse navbar-text margin-left\" id=\"navbarNavDropdown\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item margin-li\">\n            <a className=\"nav-link\" href=\"#about\">ORDENAR PEDIDO</a>\n          </li>\n          <li className=\"nav-item margin-li\">\n            <a className=\"nav-link\" href=\"#about\">ATENDER PEDIDO</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#about\">PEDIDO LISTO</a>\n          </li>\n        </ul>\n      </div>\n      {/* <span class=\"navbar-text\">\n      Navbar text with an inline element\n    </span> */}\n    </nav>\n  );\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Orden.css';\n\nfunction Orden({\n  addUser, orden, user, handleInputChange, updateItem, deleteOrden,\n}) {\n  return (\n    <form onSubmit={addUser} className=\"margintop\">\n      <div className=\"center orden weigth\">\n        <p>ORDEN</p>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4 section\">\n          <p>Nombre de cliente:</p>\n        </div>\n        <div className=\"col-8 section\">\n          <input type=\"text\" name=\"name\" value={user.customer} onChange={handleInputChange} data-testid=\"cliente-input\" />\n        </div>\n      </div>\n      <div className=\"row section\">\n        <table className=\"table\">\n          <thead className=\"table weigth\">\n            <tr>\n              <th>ITEM</th>\n              <th>CANTIDAD</th>\n              <th>P/UNITARIO</th>\n              <th>P/TOTAL</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className=\"table\">\n            {orden.length > 0 ? (\n              orden.map((item, index) => (\n                <tr data-testid=\"item\" key={item.id}>\n                  <td>{item.name}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"button-count margin-button-count-sum\"\n                      onClick={() => {\n                        const newItem = { ...item };\n                        newItem.count += 1;\n                        updateItem(index, newItem);\n                      }}\n                      data-testid={`${index}-update-button-sum`}\n                    >\n                      <i className=\"fas fa-plus\"></i>\n                    </button>\n                    {item.count}\n                    <button\n                      type=\"button\"\n                      className=\"button-count margin-button-count-substr\"\n                      onClick={() => {\n                        const newItem = { ...item };\n                        newItem.count -= 1;\n                        if (newItem.count < 1) {\n                          newItem.count = 1;\n                        }\n                        updateItem(index, newItem);\n                      }}\n                      data-testid={`${index}-update-button-subs`}\n                    >\n                      <i className=\"fas fa-minus\"></i>\n                    </button>\n                  </td>\n                  <td>{item.value}</td>\n                  <td>{item.count * item.value}</td>\n                  <td>\n                    <button type=\"button\" className=\"button muted-button button-delete\" onClick={() => deleteOrden(item.name)} data-testid={`${index}-deleteOrden-button`}><i className=\"fas fa-trash-alt\" /></button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={3}>No hay pedidos</td>\n              </tr>\n            )}\n          </tbody>\n          <tfoot className=\"table weigth\">\n            <tr>\n              <th>TOTAL</th>\n              <th>\n                {orden.reduce((preciototal, elemento) => preciototal\n                + (elemento.count * elemento.value),\n                0)}\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n      <div className=\"margin-button-send weigth\">\n        <button type=\"submit\" data-testid=\"ordenToFirebase-button\" className=\"button-send\">ENVIAR A COCINAR</button>\n      </div>\n    </form>\n  );\n}\n\nOrden.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  orden: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  updateItem: PropTypes.func.isRequired,\n  deleteOrden: PropTypes.func.isRequired,\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Orden;\n","/* eslint-disable react/self-closing-comp */\nimport React, { useState } from 'react';\nimport './styles/Menu.css';\nimport PropTypes from 'prop-types';\n\nexport default function Menu({ addOrden, state }) {\n  const [filter, setFilter] = useState('Desayuno');\n\n\n  return (\n    <div className=\"background-blue\">\n      <div className=\"row button-center margintop margin-filter-bottom\">\n        <div className=\"col-6\">\n          <button className=\"button-filter weigth marginsup list-group-item list-group-item-action tabs\" type=\"button\" onClick={() => setFilter('Desayuno')} data-testid=\"filter-button-desayuno\">DESAYUNO</button>\n        </div>\n        <div className=\"col-6\">\n          <button className=\"button-filter weigth marginsup list-group-item list-group-item-action tabs\" type=\"button\" onClick={() => setFilter('Resto del día')} data-testid=\"filter-button-restodeldia\">MENÚ</button>\n        </div>\n      </div>\n      <div className=\"background-blue div-center\">\n        {state.filter(compare => (compare.type === filter)).map(item => (\n          <div key={item.id} className=\"row button-center background-white margin-div margin-top div-centerhijo\">\n            <div className=\"col-3\">\n              <img src={item.img} alt=\"imagen de opciones\"></img>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <p>{item.name}</p>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <p>\n                $/\n                {item.value}\n                .00\n              </p>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <button key={item.id} className=\"button-addOrden\" type=\"button\" onClick={() => addOrden(item.name)} data-testid=\"addOrden-button\"><i className=\"fas fa-shopping-cart\"></i></button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nMenu.propTypes = {\n  addOrden: PropTypes.func.isRequired,\n  state: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDcljSmfPj-K2KFAIkSJovXh5vomh91q60',\n  authDomain: 'burger-queen-a4832.firebaseapp.com',\n  databaseURL: 'https://burger-queen-a4832.firebaseio.com',\n  projectId: 'burger-queen-a4832',\n  storageBucket: 'burger-queen-a4832.appspot.com',\n  messagingSenderId: '358515366780',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport Orden from '../components/Orden';\nimport Menu from '../components/Menu';\nimport firebase from '../firestore';\nimport './styles/BadgeNew.css';\n\nconst BadgeNew = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios('https://raw.githubusercontent.com/mahaliroblesarbieto/LIM008-fe-burger-queen/prototype/src/data/menu.json');\n      setState(result.data);\n    }\n    fetchData();\n  }, []);\n\n  const [orden, setOrden] = useState([]);\n  const addOrden = (name) => {\n    state.filter(item => (item.name === name ? setOrden([...orden, item]) : item));\n  };\n  const deleteOrden = (name) => {\n    setOrden(orden.filter(item => item.name !== name));\n  };\n  const updateItem = (index, item) => {\n    const newItems = [...orden];\n    newItems[index] = item;\n    setOrden(newItems);\n  };\n  const [user, setUser] = useState({ customer: '' });\n  const handleInputChange = (event) => {\n    setUser({ customer: event.target.value });\n  };\n  const addUser = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.collection('users').add({ name: user.customer, orden, date: firebase.firestore.FieldValue.serverTimestamp() });\n    setUser({ customer: '' });\n    setOrden([]);\n  };\n  return (\n    <div>\n      <Navbar />\n      <div className=\"row\">\n        <div className=\"col-md-6 background-blue\">\n          <Menu addOrden={addOrden} state={state} />\n        </div>\n        <div className=\"col-md-6 background-yellow margin-black\">\n          <Orden\n            orden={orden}\n            deleteOrden={deleteOrden}\n            updateItem={updateItem}\n            addUser={addUser}\n            user={user}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BadgeNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport BadgeNew from './pages/BadgeNew';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst container = document.getElementById('root');\nReactDOM.render(<BadgeNew />, container);\n\nserviceWorker.register();\n"],"sourceRoot":""}