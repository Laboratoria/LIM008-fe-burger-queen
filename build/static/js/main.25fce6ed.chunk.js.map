{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/Orden.js","components/Menu.js","firestore.js","pages/BadgeNew.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","react_default","a","createElement","className","href","Orden","_ref","addUser","orden","user","handleInputChange","updateItem","deleteOrden","onSubmit","type","name","value","customer","onChange","data-testid","length","map","item","index","key","id","onClick","newItem","Object","objectSpread","count","concat","colSpan","reduce","preciototal","elemento","Menu","addOrden","state","_useState","useState","_useState2","slicedToArray","filter","setFilter","compare","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BadgeNew","setState","useEffect","fetch","then","res","json","_useState3","_useState4","setOrden","_useState5","_useState6","setUser","Navbar_Navbar","Menu_Menu","toConsumableArray","components_Orden","newItems","e","preventDefault","db","firestore","settings","timestampsInSnapshots","collection","add","event","target","container","document","getElementById","ReactDOM","render","pages_BadgeNew","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25fce6ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './styles/Navbar.css';\n\nexport default function Navbar() {\n  return (\n    <div className=\"Navbar\">\n      <div className=\"container-fluid row\">\n        <div className=\"col-6\">\n          <h1>BURGER QUEEN</h1>\n        </div>\n        <div className=\"col-6 Navbar__brand:hover\">\n          <div className=\"row\">\n            <div className=\"col-4\"><a href=\"#about\">ORDENAR PEDIDO</a></div>\n            <div className=\"col-4\"><a href=\"#about\">ATENDER PEDIDO</a></div>\n            <div className=\"col-4\"><a href=\"#about\">PEDIDO LISTO</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Navbar.css';\n\nfunction Orden({\n  addUser, orden, user, handleInputChange, updateItem, deleteOrden,\n}) {\n  return (\n    <form onSubmit={addUser}>\n      <div>\n        <h1>ORDEN</h1>\n      </div>\n      <div>\n        <p>NOMBRE DE CLIENTE:</p>\n        <input type=\"text\" name=\"name\" value={user.customer} onChange={handleInputChange} data-testid=\"cliente-input\" />\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th>ITEM</th>\n            <th>CANTIDAD</th>\n            <th>P/UNITARIO</th>\n            <th>P/TOTAL</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orden.length > 0 ? (\n            orden.map((item, index) => (\n              <tr data-testid=\"item\" key={item.id}>\n                <td>{item.name}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count += 1;\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-sum`}\n                  >\n                    +\n                  </button>\n                  {item.count}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count -= 1;\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-subs`}\n                  >\n                      -\n                  </button>\n                </td>\n                <td>{item.value}</td>\n                <td>{item.count * item.value}</td>\n                <td>\n                  <button type=\"button\" className=\"button muted-button\" onClick={() => deleteOrden(item.name)} data-testid={`${index}-deleteOrden-button`}>Delete</button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={3}>No hay pedidos</td>\n            </tr>\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <th>TOTAL</th>\n            <th>\n              {orden.reduce((preciototal, elemento) => preciototal\n              + (elemento.count * elemento.value),\n              0)}\n            </th>\n          </tr>\n        </tfoot>\n      </table>\n      <div>\n        <button type=\"submit\" data-testid=\"ordenToFirebase-button\">Enviar a cocina</button>\n      </div>\n    </form>\n  );\n}\n\nOrden.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  orden: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  updateItem: PropTypes.func.isRequired,\n  deleteOrden: PropTypes.func.isRequired,\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Orden;\n","import React, { useState } from 'react';\nimport './styles/Menu.css';\nimport PropTypes from 'prop-types';\n\nexport default function Menu({ addOrden, state }) {\n  const [filter, setFilter] = useState('Desayuno');\n\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <button type=\"button\" onClick={() => setFilter('Desayuno')} data-testid=\"filter-button-desayuno\">DESAYUNO</button>\n        </div>\n        <div className=\"col-6\">\n          <button type=\"button\" onClick={() => setFilter('Resto del día')} data-testid=\"filter-button-restodeldia\">MENÚ</button>\n        </div>\n      </div>\n      <div>\n        {state.filter(compare => (compare.type === filter)).map(item => (\n          <button key={item.id} className=\"margin\" type=\"button\" onClick={() => addOrden(item.name)} data-testid=\"addOrden-button\">\n            {`${item.name} ${item.value}`}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\nMenu.propTypes = {\n  addOrden: PropTypes.func.isRequired,\n  state: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDcljSmfPj-K2KFAIkSJovXh5vomh91q60',\n  authDomain: 'burger-queen-a4832.firebaseapp.com',\n  databaseURL: 'https://burger-queen-a4832.firebaseio.com',\n  projectId: 'burger-queen-a4832',\n  storageBucket: 'burger-queen-a4832.appspot.com',\n  messagingSenderId: '358515366780',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Orden from '../components/Orden';\nimport Menu from '../components/Menu';\nimport firebase from '../firestore';\n\nconst BadgeNew = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/mahaliroblesarbieto/LIM008-fe-burger-queen/prototype/src/data/menu.json')\n      .then(res => res.json())\n      .then((json) => {\n        setState(json);\n      });\n  }, []);\n\n  const [orden, setOrden] = useState([]);\n  const addOrden = (name) => {\n    state.filter(item => (item.name === name ? setOrden([...orden, item]) : item));\n  };\n  const deleteOrden = (name) => {\n    setOrden(orden.filter(item => item.name !== name));\n  };\n  const updateItem = (index, item) => {\n    const newItems = [...orden];\n    newItems[index] = item;\n    setOrden(newItems);\n  };\n  const [user, setUser] = useState({ customer: '' });\n  const handleInputChange = (event) => {\n    setUser({ customer: event.target.value });\n  };\n  const addUser = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.settings({ timestampsInSnapshots: true });\n    db.collection('users').add({ name: user.customer, orden });\n    setUser({ customer: '' });\n    setOrden([]);\n  };\n  return (\n    <div>\n      <Navbar />\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <Menu addOrden={addOrden} state={state} />\n        </div>\n        <div className=\"col-6\">\n          <Orden\n            orden={orden}\n            deleteOrden={deleteOrden}\n            updateItem={updateItem}\n            addUser={addUser}\n            user={user}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BadgeNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport BadgeNew from './pages/BadgeNew';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst container = document.getElementById('root');\nReactDOM.render(<BadgeNew />, container);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}