{"version":3,"sources":["registerServiceWorker.js","components/Navbar.js","components/Orden.js","components/Menu.js","firestore.js","pages/BadgeNew.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Navbar","react_default","a","createElement","className","href","Orden","_ref","addUser","orden","user","handleInputChange","updateItem","deleteOrden","onSubmit","type","name","value","customer","onChange","data-testid","length","map","item","index","key","id","onClick","newItem","Object","objectSpread","count","concat","colSpan","reduce","preciototal","elemento","Menu","addOrden","_useState","useState","_useState2","slicedToArray","filter","setFilter","compare","src","img","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BadgeNew","setState","useEffect","fetch","res","json","_useState3","_useState4","setOrden","_useState5","_useState6","setUser","Navbar_Navbar","Menu_Menu","toConsumableArray","components_Orden","newItems","e","preventDefault","db","firestore","settings","timestampsInSnapshots","collection","add","event","target","container","document","getElementById","ReactDOM","render","pages_BadgeNew","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.623248e5.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\r\nimport './styles/Navbar.css';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h1 className=\"title container-fluid\">BURGER QUEEN</h1>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <div className=\"row margin-top\">\r\n            <div className=\"col-4 margin-div a-center\"><a href=\"#about\" className=\"color\">ORDENAR PEDIDO</a></div>\r\n            <div className=\"col-4 margin-div a-center\"><a href=\"#about\" className=\"color\">ATENDER PEDIDO</a></div>\r\n            <div className=\"col-4 a-center\"><a href=\"#about\" className=\"color\">PEDIDO LISTO</a></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Orden.css';\n\nfunction Orden({\n  addUser, orden, user, handleInputChange, updateItem, deleteOrden,\n}) {\n  return (\n    <form onSubmit={addUser} className=\"margintop\">\n      <div className=\"center orden weigth\">\n        <p>ORDEN</p>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4 section\">\n          <p>Nombre de cliente:</p>\n        </div>\n        <div className=\"col-8 section\">\n          <input type=\"text\" name=\"name\" value={user.customer} onChange={handleInputChange} data-testid=\"cliente-input\" />\n        </div>\n      </div>\n      <div className=\"row section\">\n        <table className=\"table\">\n          <thead className=\"table weigth\">\n            <tr>\n              <th>ITEM</th>\n              <th>CANTIDAD</th>\n              <th>P/UNITARIO</th>\n              <th>P/TOTAL</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className=\"table\">\n            {orden.length > 0 ? (\n              orden.map((item, index) => (\n                <tr data-testid=\"item\" key={item.id}>\n                  <td>{item.name}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"button-count margin-button-count-sum\"\n                      onClick={() => {\n                        const newItem = { ...item };\n                        newItem.count += 1;\n                        updateItem(index, newItem);\n                      }}\n                      data-testid={`${index}-update-button-sum`}\n                    >\n                      <i className=\"fas fa-plus\"></i>\n                    </button>\n                    {item.count}\n                    <button\n                      type=\"button\"\n                      className=\"button-count margin-button-count-substr\"\n                      onClick={() => {\n                        const newItem = { ...item };\n                        newItem.count -= 1;\n                        if (newItem.count < 1) {\n                          newItem.count = 1;\n                        }\n                        updateItem(index, newItem);\n                      }}\n                      data-testid={`${index}-update-button-subs`}\n                    >\n                      <i className=\"fas fa-minus\"></i>\n                    </button>\n                  </td>\n                  <td>{item.value}</td>\n                  <td>{item.count * item.value}</td>\n                  <td>\n                    <button type=\"button\" className=\"button muted-button button-delete\" onClick={() => deleteOrden(item.name)} data-testid={`${index}-deleteOrden-button`}><i className=\"fas fa-trash-alt\" /></button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={3}>No hay pedidos</td>\n              </tr>\n            )}\n          </tbody>\n          <tfoot className=\"table weigth\">\n            <tr>\n              <th>TOTAL</th>\n              <th>\n                {orden.reduce((preciototal, elemento) => preciototal\n                + (elemento.count * elemento.value),\n                0)}\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n      <div className=\"margin-button-send weigth\">\n        <button type=\"submit\" data-testid=\"ordenToFirebase-button\" className=\"button-send\">ENVIAR A COCINAR</button>\n      </div>\n    </form>\n  );\n}\n\nOrden.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  orden: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  updateItem: PropTypes.func.isRequired,\n  deleteOrden: PropTypes.func.isRequired,\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Orden;\n","/* eslint-disable react/self-closing-comp */\nimport React, { useState } from 'react';\nimport './styles/Menu.css';\nimport PropTypes from 'prop-types';\n\nexport default function Menu({ addOrden, state }) {\n  const [filter, setFilter] = useState('Desayuno');\n\n\n  return (\n    <div className=\"background-blue\">\n      <div className=\"row button-center margintop margin-filter-bottom\">\n        <div className=\"col-6 margin-filter\">\n          <button className=\"button-filter weigth marginsup\" type=\"button\" onClick={() => setFilter('Desayuno')} data-testid=\"filter-button-desayuno\">DESAYUNO</button>\n        </div>\n        <div className=\"col-6\">\n          <button className=\"button-filter weigth marginsup\" type=\"button\" onClick={() => setFilter('Resto del día')} data-testid=\"filter-button-restodeldia\">MENÚ</button>\n        </div>\n      </div>\n      <div className=\"background-blue div-center\">\n        {state.filter(compare => (compare.type === filter)).map(item => (\n          <div key={item.id} className=\"row button-center background-white margin-div margin-top div-centerhijo\">\n            <div className=\"col-3\">\n              <img src={item.img} alt=\"imagen de opciones\"></img>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <p>{item.name}</p>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <p>\n                $/\n                {item.value}\n                .00\n              </p>\n            </div>\n            <div className=\"col-3 width section centrar1\">\n              <button key={item.id} className=\"button-addOrden\" type=\"button\" onClick={() => addOrden(item.name)} data-testid=\"addOrden-button\"><i className=\"fas fa-shopping-cart\"></i></button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nMenu.propTypes = {\n  addOrden: PropTypes.func.isRequired,\n  state: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDcljSmfPj-K2KFAIkSJovXh5vomh91q60',\n  authDomain: 'burger-queen-a4832.firebaseapp.com',\n  databaseURL: 'https://burger-queen-a4832.firebaseio.com',\n  projectId: 'burger-queen-a4832',\n  storageBucket: 'burger-queen-a4832.appspot.com',\n  messagingSenderId: '358515366780',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Orden from '../components/Orden';\nimport Menu from '../components/Menu';\nimport firebase from '../firestore';\nimport './styles/BadgeNew.css';\n\nconst BadgeNew = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/mahaliroblesarbieto/LIM008-fe-burger-queen/prototype/src/data/menu.json')\n      .then(res => res.json())\n      .then((json) => {\n        setState(json);\n      });\n  }, []);\n\n  const [orden, setOrden] = useState([]);\n  const addOrden = (name) => {\n    state.filter(item => (item.name === name ? setOrden([...orden, item]) : item));\n  };\n  const deleteOrden = (name) => {\n    setOrden(orden.filter(item => item.name !== name));\n  };\n  const updateItem = (index, item) => {\n    const newItems = [...orden];\n    newItems[index] = item;\n    setOrden(newItems);\n  };\n  const [user, setUser] = useState({ customer: '' });\n  const handleInputChange = (event) => {\n    setUser({ customer: event.target.value });\n  };\n  const addUser = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.settings({ timestampsInSnapshots: true });\n    db.collection('users').add({ name: user.customer, orden });\n    setUser({ customer: '' });\n    setOrden([]);\n  };\n  return (\n    <div>\n      <div className=\"row\">\n        <Navbar />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6 background-blue\">\n          <Menu addOrden={addOrden} state={state} />\n        </div>\n        <div className=\"col-md-6 background-yellow margin-black\">\n          <Orden\n            orden={orden}\n            deleteOrden={deleteOrden}\n            updateItem={updateItem}\n            addUser={addUser}\n            user={user}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BadgeNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker';\nimport BadgeNew from './pages/BadgeNew';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst container = document.getElementById('root');\nReactDOM.render(<BadgeNew />, container);\n\n// ServiceWorker.register();\nregisterServiceWorker();\n"],"sourceRoot":""}