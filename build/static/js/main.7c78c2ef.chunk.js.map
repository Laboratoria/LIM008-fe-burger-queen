{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/Orden.js","components/Menu.js","firestore.js","pages/BadgeNew.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Navbar","react_default","a","createElement","className","Orden","_ref","addUser","orden","user","handleInputChange","updateItem","deleteOrden","onSubmit","length","map","item","index","data-testid","key","id","name","type","onClick","newItem","Object","objectSpread","count","concat","value","reduce","preciototal","elemento","htmlFor","customer","onChange","Menu","addOrden","_useState","useState","_useState2","slicedToArray","filter","setFilter","ButtonGroup_default","size","Button_default","variant","compare","src","img","alt","role","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","BadgeNew","setState","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","data","stop","apply","this","arguments","fetchData","_useState3","_useState4","setOrden","_useState5","_useState6","setUser","Navbar_Navbar","Menu_Menu","obj","includes","indexOf","toConsumableArray","components_Orden","newItems","e","preventDefault","firestore","collection","add","date","FieldValue","serverTimestamp","event","target","container","document","getElementById","ReactDOM","render","pages_BadgeNew","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c78c2ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport './styles/Navbar.css';\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark Navbar justify-content-between title\">\n      <h1 className=\"principal\">BURGER QUEEN</h1>\n    </nav>\n  );\n}\n","/* eslint-disable react/self-closing-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Orden.css';\n\nfunction Orden({\n  addUser, orden, user, handleInputChange, updateItem, deleteOrden,\n}) {\n  return (\n    <div>\n      <form onSubmit={addUser} className=\"margintop\">\n        <div className=\"center weigth row margin-orden\">\n          ORDEN\n        </div>\n        <div className=\"container center margin-option\">\n          <div className=\"row weigth font-mayor\">\n            <div className=\"col-3\">DESCRIPCIÓN</div>\n            <div className=\"col-3\">CANTIDAD</div>\n            <div className=\"col-3\">P/UNITARIO</div>\n            <div className=\"col-3\">P/TOTAL</div>\n          </div>\n          {orden.length > 0 ? (\n            orden.map((item, index) => (\n              <div className=\"row margin-option font-menor section\" data-testid=\"item\" key={item.id}>\n                <div className=\"col-3\">{item.name}</div>\n                <div className=\"col-3 center\">\n                  <button\n                    type=\"button\"\n                    className=\"button-count margin-button-count-sum\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count += 1;\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-sum`}\n                  >\n                    <i className=\"fas fa-plus\"></i>\n                  </button>\n                  <span data-testid={`${index}-amount`}>{item.count}</span>\n                  <button\n                    type=\"button\"\n                    className=\"button-count margin-button-count-substr\"\n                    onClick={() => {\n                      const newItem = { ...item };\n                      newItem.count -= 1;\n                      if (newItem.count < 1) {\n                        newItem.count = 1;\n                      }\n                      updateItem(index, newItem);\n                    }}\n                    data-testid={`${index}-update-button-subs`}\n                  >\n                    <i className=\"fas fa-minus\"></i>\n                  </button>\n                </div>\n                <div className=\"col-3 center\">\n                  $/\n                  {item.value}\n                  .00\n                </div>\n                <div className=\"col-3 center\">\n                  $/\n                  {item.count * item.value}\n                  .00\n                  <button type=\"button\" className=\"button muted-button button-delete margin-button-count-substr\" onClick={() => deleteOrden(item.name)} data-testid={`${index}-deleteOrden-button`}><i className=\"fas fa-trash-alt\" /></button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"row center margin-option section\">\n              <div className=\"col-12 center\">\n                No hay pedidos\n              </div>\n            </div>\n          )}\n          <div className=\"row weigth margin-total font-mayor margin-option\">\n            <div className=\"col-3 center\">\n              TOTAL:\n            </div>\n            <div className=\"col-9 center\">\n              $/\n              {orden.reduce((preciototal, elemento) => preciototal\n                + (elemento.count * elemento.value),\n              0)}\n              .00\n            </div>\n          </div>\n          <div className=\"section form-inline margin-cliente\">\n            <div className=\"row\">\n              <label htmlFor=\"name\">\n                Cliente:\n                <input type=\"text\" id=\"name\" name=\"name\" value={user.customer} onChange={handleInputChange} data-testid=\"cliente-input\" />\n              </label>\n            </div>\n            <button type=\"submit\" data-testid=\"ordenToFirebase-button\" className=\"button-send margin-send\">ENVIAR A COCINAR</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nOrden.propTypes = {\n  addUser: PropTypes.func.isRequired,\n  orden: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  updateItem: PropTypes.func.isRequired,\n  deleteOrden: PropTypes.func.isRequired,\n  user: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Orden;\n","/* eslint-disable react/self-closing-comp */\nimport React, { useState } from 'react';\nimport './styles/Menu.css';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Menu({ addOrden, state }) {\n  const [filter, setFilter] = useState('Desayuno');\n  return (\n    <div className=\"width\">\n      <div className=\"d-flex flex-column border-black\">\n        <ButtonGroup size=\"mt-3\">\n          <Button className=\"button-filter weigth marginsup btn marginrigth\" variant=\"outline-dark\" type=\"button\" onClick={() => setFilter('Desayuno')} data-testid=\"filter-button-desayuno\">DESAYUNO</Button>\n          <Button className=\"button-filter weigth marginsup btn\" variant=\"outline-dark\" type=\"button\" onClick={() => setFilter('Resto del día')} data-testid=\"filter-button-restodeldia\">MENÚ</Button>\n        </ButtonGroup>\n      </div>\n      <div className=\"div-center\">\n        {state.filter(compare => (compare.type === filter)).map(item => (\n          <div key={item.id} className=\"row button-center border-black margin-div div-centerhijo padding-option\">\n            <div className=\"col-3\">\n              <img src={item.img} alt=\"imagen de opciones\"></img>\n            </div>\n            <div className=\"col-3 width section centrar font-menor\">\n              <p>{item.name}</p>\n            </div>\n            <div className=\"col-3 width section centrar font-menor\">\n              <p>\n                $/\n                {item.value}\n                .00\n              </p>\n            </div>\n            <div className=\"col-3 width section centrar margin-addOrden\">\n              <span key={item.id} className=\"addOrden\" role=\"presentation\" onClick={() => addOrden(item)} data-testid=\"addOrden-button\"><i className=\"fas fa-shopping-cart\"></i></span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nMenu.propTypes = {\n  addOrden: PropTypes.func.isRequired,\n  state: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDcljSmfPj-K2KFAIkSJovXh5vomh91q60',\n  authDomain: 'burger-queen-a4832.firebaseapp.com',\n  databaseURL: 'https://burger-queen-a4832.firebaseio.com',\n  projectId: 'burger-queen-a4832',\n  storageBucket: 'burger-queen-a4832.appspot.com',\n  messagingSenderId: '358515366780',\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport Orden from '../components/Orden';\nimport Menu from '../components/Menu';\nimport firebase from '../firestore';\nimport './styles/BadgeNew.css';\n\nconst BadgeNew = () => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios('https://raw.githubusercontent.com/mahaliroblesarbieto/LIM008-fe-burger-queen/prototype/src/data/menu.json');\n      setState(result.data);\n    }\n    fetchData();\n  }, []);\n\n  const [orden, setOrden] = useState([]);\n  const addOrden = (obj) => {\n    if (orden.includes(obj)) {\n      const index = orden.indexOf(obj);\n      orden[index].count += 1;\n      setOrden([...orden]);\n    } else {\n      state.filter(item => (item.name === obj.name ? setOrden([...orden, item]) : item));\n    }\n  };\n  const deleteOrden = (name) => {\n    setOrden(orden.filter(item => item.name !== name));\n  };\n  const updateItem = (index, item) => {\n    const newItems = [...orden];\n    newItems[index] = item;\n    setOrden(newItems);\n  };\n  const [user, setUser] = useState({ customer: '' });\n  const handleInputChange = (event) => {\n    setUser({ customer: event.target.value });\n  };\n  const addUser = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore();\n    db.collection('users').add({ name: user.customer, orden, date: firebase.firestore.FieldValue.serverTimestamp() });\n    setUser({ customer: '' });\n    setOrden([]);\n  };\n  return (\n    <div className=\"width-total\">\n      <div className=\"row width-total\">\n        <Navbar />\n      </div>\n      <div className=\"row width-total\">\n        <div className=\"col-md-6\">\n          <Menu addOrden={addOrden} state={state} />\n        </div>\n        <div className=\"col-md-6 margin-black\">\n          <Orden\n            orden={orden}\n            deleteOrden={deleteOrden}\n            updateItem={updateItem}\n            addUser={addUser}\n            user={user}\n            handleInputChange={handleInputChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BadgeNew;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport BadgeNew from './pages/BadgeNew';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst container = document.getElementById('root');\nReactDOM.render(<BadgeNew className=\"width-total\" />, container);\n\nserviceWorker.register();\n"],"sourceRoot":""}